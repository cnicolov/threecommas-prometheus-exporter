/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.zombito.exporter.model

import com.fasterxml.jackson.annotation.JsonIgnore
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonProperty

import com.zombito.exporter.model.BotType
import com.zombito.exporter.model.LeverageType
import com.zombito.exporter.model.OrderVolumeEnum
import com.zombito.exporter.model.ProfitCurrencyEnum
import com.zombito.exporter.model.StopLossType
import com.zombito.exporter.model.StrategyType
import com.zombito.exporter.model.TakeProfitType


/**
 * 
 *
 * @param id 
 * @param accountId 
 * @param isEnabled 
 * @param maxSafetyOrders 
 * @param activeSafetyOrdersCount 
 * @param pairs 
 * @param strategyList 
 * @param maxActiveDeals 
 * @param activeDealsCount 
 * @param deletableQuestionMark 
 * @param createdAt 
 * @param updatedAt 
 * @param trailingEnabled 
 * @param tslEnabled 
 * @param dealStartDelaySeconds Deal start delay in seconds
 * @param stopLossTimeoutEnabled 
 * @param stopLossTimeoutInSeconds 
 * @param disableAfterDealsCount 
 * @param dealsCounter 
 * @param allowedDealsOnSamePair 
 * @param easyFormSupported 
 * @param closeDealsTimeout Close bot deals after given number of seconds
 * @param urlSecret 
 * @param name 
 * @param takeProfit Percentage
 * @param baseOrderVolume 
 * @param safetyOrderVolume 
 * @param safetyOrderStepPercentage 
 * @param takeProfitType 
 * @param type 
 * @param martingaleVolumeCoefficient 
 * @param martingaleStepCoefficient 
 * @param stopLossPercentage 
 * @param cooldown 
 * @param btcPriceLimit 
 * @param strategy 
 * @param minVolumeBtc24h 
 * @param profitCurrency 
 * @param minPrice 
 * @param maxPrice 
 * @param stopLossType 
 * @param safetyOrderVolumeType 
 * @param baseOrderVolumeType 
 * @param accountName 
 * @param trailingDeviation 
 * @param finishedDealsProfitUsd 
 * @param finishedDealsCount 
 * @param leverageType 
 * @param leverageCustomValue 
 * @param startOrderType Values: limit, market
 * @param activeDealsUsdProfit Sum of active deals profits
 */


@JsonIgnoreProperties(ignoreUnknown = true)
data class BotEntity (

    @field:JsonProperty("id")
    val id: Int? = null,

    @field:JsonProperty("account_id")
    val accountId: kotlin.Int? = null,

    @field:JsonProperty("is_enabled")
    val isEnabled: kotlin.Boolean? = null,

    @field:JsonProperty("max_safety_orders")
    val maxSafetyOrders: kotlin.Int? = null,

    @field:JsonProperty("active_safety_orders_count")
    val activeSafetyOrdersCount: kotlin.Int? = null,

    @field:JsonProperty("pairs")
    val pairs: kotlin.collections.List<kotlin.String>? = null,

    @field:JsonProperty("max_active_deals")
    val maxActiveDeals: kotlin.Int? = null,

    @field:JsonProperty("active_deals_count")
    val activeDealsCount: kotlin.Int? = null,

    @field:JsonProperty("created_at")
    val createdAt: java.time.OffsetDateTime? = null,

    @field:JsonProperty("updated_at")
    val updatedAt: java.time.OffsetDateTime? = null,

    @field:JsonProperty("trailing_enabled")
    val trailingEnabled: kotlin.Boolean? = null,

    @field:JsonProperty("tsl_enabled")
    val tslEnabled: kotlin.Boolean? = null,

    /* Deal start delay in seconds */
    @field:JsonProperty("deal_start_delay_seconds")
    val dealStartDelaySeconds: kotlin.Int? = null,

    @field:JsonProperty("stop_loss_timeout_enabled")
    val stopLossTimeoutEnabled: kotlin.Boolean? = null,

    @field:JsonProperty("stop_loss_timeout_in_seconds")
    val stopLossTimeoutInSeconds: kotlin.Int? = null,

    @field:JsonProperty("disable_after_deals_count")
    val disableAfterDealsCount: kotlin.Int? = null,

    @field:JsonProperty("deals_counter")
    val dealsCounter: kotlin.Int? = null,

    @field:JsonProperty("allowed_deals_on_same_pair")
    val allowedDealsOnSamePair: kotlin.Int? = null,

    @field:JsonProperty("easy_form_supported")
    val easyFormSupported: kotlin.Boolean? = null,

    /* Close bot deals after given number of seconds */
    @field:JsonProperty("close_deals_timeout")
    val closeDealsTimeout: kotlin.Int? = null,

    @field:JsonProperty("url_secret")
    val urlSecret: kotlin.String? = null,

    @field:JsonProperty("name")
    val name: kotlin.String? = null,

    /* Percentage */
    @field:JsonProperty("take_profit")
    val takeProfit: kotlin.String? = null,

    @field:JsonProperty("base_order_volume")
    val baseOrderVolume: kotlin.String? = null,

    @field:JsonProperty("safety_order_volume")
    val safetyOrderVolume: kotlin.String? = null,

    @field:JsonProperty("safety_order_step_percentage")
    val safetyOrderStepPercentage: kotlin.String? = null,

    @field:JsonProperty("take_profit_type")
    val takeProfitType: TakeProfitType? = null,

    @field:JsonProperty("type")
    val type: BotType? = null,

    @field:JsonProperty("martingale_volume_coefficient")
    val martingaleVolumeCoefficient: kotlin.String? = null,

    @field:JsonProperty("martingale_step_coefficient")
    val martingaleStepCoefficient: kotlin.String? = null,

    @field:JsonProperty("stop_loss_percentage")
    val stopLossPercentage: kotlin.String? = null,

    @field:JsonProperty("cooldown")
    val cooldown: kotlin.String? = null,

    @field:JsonProperty("btc_price_limit")
    val btcPriceLimit: kotlin.String? = null,

    @field:JsonProperty("strategy")
    val strategy: StrategyType? = null,

    @field:JsonProperty("min_volume_btc_24h")
    val minVolumeBtc24h: kotlin.String? = null,

    @field:JsonProperty("profit_currency")
    val profitCurrency: ProfitCurrencyEnum? = null,

    @field:JsonProperty("min_price")
    val minPrice: kotlin.String? = null,

    @field:JsonProperty("max_price")
    val maxPrice: kotlin.String? = null,

    @field:JsonProperty("stop_loss_type")
    val stopLossType: StopLossType? = null,

    @field:JsonProperty("safety_order_volume_type")
    val safetyOrderVolumeType: OrderVolumeEnum? = null,

    @field:JsonProperty("base_order_volume_type")
    val baseOrderVolumeType: OrderVolumeEnum? = null,

    @field:JsonProperty("account_name")
    val accountName: kotlin.String? = null,

    @field:JsonProperty("trailing_deviation")
    val trailingDeviation: kotlin.String? = null,

    @field:JsonProperty("finished_deals_profit_usd")
    val finishedDealsProfitUsd: kotlin.String? = null,

    @field:JsonProperty("finished_deals_count")
    val finishedDealsCount: kotlin.String? = null,

    @field:JsonProperty("leverage_type")
    val leverageType: LeverageType? = null,

    @field:JsonProperty("leverage_custom_value")
    val leverageCustomValue: kotlin.String? = null,

    /* Values: limit, market */
    @field:JsonProperty("start_order_type")
    val startOrderType: kotlin.String? = null,

    /* Sum of active deals profits */
    @field:JsonProperty("active_deals_usd_profit")
    val activeDealsUsdProfit: kotlin.String? = null

)

